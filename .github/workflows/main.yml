name: CI/CD
run-name: ${{ github.sha }} of branch ${{ github.ref }} by @${{ github.actor }}

on:
  push:
    branches:
      - src-updates
    #paths: [service, client, model]

permissions:
  contents: write

jobs:
  clean-install-no-tests:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4  

      - name: Setup JDK 21
        uses: actions/setup-java@v4
        with:
          java-version: '21'
          distribution: adopt

      - name: Clean - Install project
        id: clean-install-mitroo
        run: mvn clean install -DskipTests
        
      - name: Upload report on success
        if: always() && steps.clean-install-mitroo.outcome == 'success'
        uses: actions/upload-artifact@v4
        with:
          name: notest-reports-success
          path: '**/target/notest-reports/*.xml'
      
  clean-install-unit_test:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup JDK 21
        uses: actions/setup-java@v4
        with:
          java-version: '21'
          distribution: adopt
      
      - name: Clean - Install - Test project
        id: clean-install-test-mitroo
        run: mvn clean install

      - name: Upload report on success
        if: always() && steps.clean-install-test-mitroo.outcome == 'success'
        uses: actions/upload-artifact@v4
        with:
          name: test-reports-success
          path: '**/target/surefire-reports/*.xml'

      - name: Upload report on failure
        if: always() && steps.clean-install-test-mitroo.outcome == 'failure'
        uses: actions/upload-artifact@v4
        with:
          name: test-reports-failures
          path: '**/target/surefire-reports/*.xml'
          
      

  clean-install-integration_test:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup JDK 21
        uses: actions/setup-java@v4
        with:
          java-version: '21'
          distribution: adopt          
      
      # Tries to find dependency of model.jar and fails
              
      - name: Integration test
        id: integration-test-mitroo
        run: mvn failsafe:integration-test

      - name: Upload Integration success report
        if: always() && steps.integration-test-mitroo.outcome == 'success'
        uses: actions/upload-artifact@v4
        with:
         name: integration-test-reports
         path: '**/target/failsafe-reports/*.xml'

      - name: Upload Integration failure report
        if: always() && steps.integration-test-mitroo.outcome == 'failure'
        uses: actions/upload-artifact@v4
        with:
          name: integration-test-reports-failures
          path: '**/target/failsafe-reports/*.xml'

  merge-to-develop:
    needs: clean-install-unit_test
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          ref: develop
 
      - name: Setup JDK 21
        uses: actions/setup-java@v4
        with:
          java-version: '21'
          distribution: adopt

      - name: Package mitroo
        run: mvn clean package -DskipTests

      - name: Github Release
        id: create-release
        uses: actions/create-release@v1
        with:
          tag_name: dev-pre-release
          release_name: "Release ${{github.sha }}"
          body: "Auto generated release from ${{github.sha}}"
          draft: false
          prerelease: false
        env:
          GITHUB_TOKEN: ${{secrets.GITHUB_TOKEN}}

      - name: Upload jar to Github Releases
        uses: actions/upload-release-asset@v1
        with:
          upload_url: $${{steps.create-release.outputs.upload_url}}
          asset_path: service/target/service-0.0.1-SNAPSHOT.jar
          asset_name: service-0.0.1-SNAPSHOT.jar
          asset_content_type: application/java-archive
        env:
          GITHUB_TOKEN: ${{secrets.GITHUB_TOKEN}}





















        
